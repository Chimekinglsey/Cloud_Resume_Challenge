AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template for chime.com.ng website infrastructure

Resources:
  StaticBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: chime-resume-iac-bkt
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: my_resume.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref StaticBucket, '/*']]

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - resume.chime.com.ng
        DefaultRootObject: my_resume.html
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt StaticBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref WildcardCertificate
          SslSupportMethod: sni-only

  ChimeCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - chime.com.ng
        DefaultRootObject: my_resume.html
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt StaticBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref ChimeDotComDotNgCertificate
          SslSupportMethod: sni-only

  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: chime.com.ng

  WildcardCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: "*.chime.com.ng"
      DomainValidationOptions:
        - DomainName: "*.chime.com.ng"
          HostedZoneId: !Ref HostedZone
      # ValidationMethod: DNS # Uncomment this line to use DNS validation. Default is EMAIL for faster setup 
    
  ChimeDotComDotNgCertificate:
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      DomainName: chime.com.ng
      # ValidationMethod: DNS # Uncomment this line to use DNS validation. Default is EMAIL for faster setup

  DistributionDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: chime.com.ng
      Type: A
      AliasTarget:
        DNSName: !GetAtt ChimeCloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront HostedZoneId
  
  ResumeDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: resume.chime.com.ng
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront HostedZoneId


# Backend resources - Lambda function, DynamoDB table, API Gateway
  # DynamoDB table to store visitor count
  ResumeVisitorsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: resume_visitors
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  GetAndUpdateCountFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: dynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:PutItem
                Resource: !GetAtt ResumeVisitorsTable.Arn
    
  GetAndUpdateCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: python/lambda/get_update_count.zip
      Handler: get_update_count.lambda_handler
      Runtime: python3.12
      Tracing: Active
      Events:
        GetView:
          Type: Api 
          Properties:
            Path: /views
            Method: GET
            RestApiId: !Ref ApiGateway
      Role: !GetAtt GetAndUpdateCountFunctionRole.Arn

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

Outputs:
  MyTableName:
    Description: Name of the DynamoDB table
    Value: !Ref ResumeVisitorsTable
  ApiGatewayEndpoint:
    Description: URL of the API Gateway endpoint
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/views'

